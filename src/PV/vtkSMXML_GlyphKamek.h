// Loadable modules
//
// Generated by /root/src/Paraview314/bin/kwProcessXML
//
#ifndef __vtkSMXML_GlyphKamek_h
#define __vtkSMXML_GlyphKamek_h

#include <string.h>


// From file /home/27/bbousque/Visualisation/TP2/src/GlyphKamek.xml
static const char* GlyphKamekGlyphKamekInterfaces0 =
"<ServerManagerConfiguration>\n"
"	<ProxyGroup name=\"filters\">\n"
"		<SourceProxy name=\"BumpMap\" class=\"vtkBumpMap\" label=\"Bump Mapper\">\n"
"			<Documentation long_help=\"This filter implements a bump mapping effect on the geometry by modifying the point normals.\"\n"
"					short_help=\"Modify surface normals in order to create a bump mapping effect.\">\n"
"				The BumpMap filter modifies the point normals so as to bump map the geometry, not only as a rendering effect.\n"
"			</Documentation>\n"
"\n"
"			<InputProperty\n"
"					name=\"Input\"\n"
"					command=\"SetInputConnection\">\n"
"				<ProxyGroupDomain name=\"groups\">\n"
"					<Group name=\"sources\"/>\n"
"					<Group name=\"filters\"/>\n"
"				</ProxyGroupDomain>\n"
"				<DataTypeDomain name=\"input_type\">\n"
"					<DataType value=\"vtkDataSet\"/>\n"
"				</DataTypeDomain>\n"
"				<InputArrayDomain name=\"input_array1\" attribute_type=\"point\" number_of_components=\"1\"/>\n"
"				<InputArrayDomain name=\"input_array2\" attribute_type=\"point\" number_of_components=\"3\"/>\n"
"				<Documentation>\n"
"					This property specifies the input to the BumpMap filter. This is the dataset to which the bump map effect will be applied.\n"
"				</Documentation>\n"
"			</InputProperty>\n"
"\n"
"			<DoubleVectorProperty\n"
"					name=\"SetScaleFactor\"\n"
"					command=\"SetScaleFactor\"\n"
"					number_of_elements=\"1\"\n"
"					default_values=\"1.0\" >\n"
"				<Documentation>\n"
"					The value of this property will be used as a multiplier for scaling the perturbation of the normals.\n"
"				</Documentation>\n"
"			</DoubleVectorProperty>\n"
"\n"
"			<Hints>\n"
"				<Visibility replace_input=\"2\"/>\n"
"			</Hints>\n"
"\n"
"		</SourceProxy>\n"
"	</ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* GlyphKamekGlyphKamekInterfaces()
{
  size_t len = ( 0
    + strlen(GlyphKamekGlyphKamekInterfaces0) );
  char* res = new char[ len + 1];
  res[0] = 0;
  strcat(res, GlyphKamekGlyphKamekInterfaces0);
  return res;
}



#endif
